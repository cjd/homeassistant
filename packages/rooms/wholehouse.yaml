automation:
  - id: '1610484353994'
    alias: Reset Brightness in day
    description: ''
    trigger:
    - platform: state
      entity_id:
      - light.xander_lights
      - light.lucas_lights
      - light.bedroom_lights
      - light.entry_lights
      - light.office_lights
      from: 'off'
      to: 'on'
    condition:
    - condition: time
      after: 05:00
      before: '18:00'
    action:
    - service: light.turn_on
      data:
        brightness_pct: 100
        entity_id: '{{ trigger.entity_id }}'
    mode: parallel
    max: 100
  - id: '1610484353998'
    alias: Notify - HACS updates
    trigger:
      platform: state
      entity_id: sensor.hacs
    condition:
      - condition: template
        value_template: "{{ states(trigger.entity_id) != 'unknown'}}"
      - condition: template
        value_template: "{{ (states(trigger.entity_id) | float) != 0}}"
    action:
      service: persistent_notification.create
      data_template:
        title: Updates pending in HACS
        notification_id: hacs-update
        message: >-
          {% for repo in state_attr(trigger.entity_id, 'repositories') %}
            **{{ repo.display_name }}** _{{ repo["installed_version"] }}_ -> _{{ repo["available_version"] }}_
          {% endfor %}
